apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: frontend:latest
        ports:
        - containerPort: 80
        env:
        - name: NODE_ENV
          value: "production"
        - name: REACT_APP_API_URL
          value: "https://api.example.com"
        - name: REACT_APP_OLLAMA_URL
          value: "http://ollama:11434"
        - name: REACT_APP_BLOCKCHAIN_NETWORK
          value: "mainnet"
        - name: REACT_APP_CONTRACT_ADDRESS
          value: "0x1234567890123456789012345678901234567890"
        - name: REACT_APP_INFURA_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: infura-key
        - name: REACT_APP_ALCHEMY_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: alchemy-key
        - name: REACT_APP_POLKADOT_WS_URL
          value: "wss://rpc.polkadot.io"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 80
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - example.com
    secretName: frontend-tls
  rules:
  - host: example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80 